from flask import Flask, request, render_template, send_file
from docxtpl import DocxTemplate
import os
from datetime import datetime

app = Flask(__name__)

OPTIONS = {
    "ACTIVITY": [
        "Создание игр. С удовольствием создает свои миры, усложняет/упрощает правила игры. Любит поиграть в то, что получилось.\n",
        "Творческая и креативная деятельность. Любит работать с цветами и формами, придумывать персонажей, разукрашивать их, создавать нестандартный фон, создавать дизайн\n",
        "Графика (2D/3D). Любит работать с координатной плоскостью, имеет хорошее пространственное мышление\n",
        "Алгоритмы. Нравится выполнять сложные алгоритмические задачи\n",
        "Текстовое программирование. Есть тяга к текстовому программированию, любит писать код.\n",
        "Другое\n"
    ],
    "ENGAGEMENT": [
        "Активно проявляет участие в дискуссиях. Активно предлагает решения возникающих задач.\n",
        "Время от времени участвует в обсуждениях, предлагает решения возникающих задач\n",
        "Участвует в обсуждениях возникающих задач в зависимости от модуля – если модуль нравится, то активность высокая, если не очень, то активность меньше.\n",
        "Редко принимает участие дискуссиях и обсуждениях решений возникающих задач. Предпочитает работать самостоятельно\n",
        "Другое\n"
    ],
    "GOALS": [
        "Редко просит помощь, предпочитает решать задачи самостоятельно\n",
        "Время от времени просит помочь - когда сам уже не справляется\n",
        "Просьба в помощи возникает в зависимости от модуля, который изучают. Когда модуль интересен, то делает всё самостоятельно, когда модуль кажется скучноватым, то просит помощь\n",
        "Очень любит пообщаться с тьютором и ассистентом, когда что-то не получается :)\n",
        "Другое\n"
    ],
    "HELP": [
        "Очень любит помогать и подсказывать друзьям пути решения проблемы\n",
        "Помогает соседу время от времени – в зависимости от того, кто сосед :)\n",
        "Не очень любит помогать\n",
        "Другое\n"
    ],
    "COMMUNICATION": [
        "Очень любит пообщаться – рассказать о своих увлечениях, поделиться жизненными историями. Общается свободно и непринужденно\n",
        "Спокойно может вести диалог как с тьютором/ассистентом, так и с ребятами\n",
        "Не болтун :)\n",
        "Другое\n"
    ],
    "BREAKS": [
        "Активно участвует в активностях\n",
        "Предпочитает посидеть в телефоне\n",
        "Другое\n"
    ],
    "CREATIVITY": [
        "Следует рекомендациям тьютора. Выполняет всё так, как требует программа\n",
        "Время от времени отходит от программы, чтобы воплотить свои задумки в жизнь.\n",
        "Чаще всего проявляет креативность. Любит чтобы его проект кардинально отличался от проектов других ребят\n",
        "Другое\n"
    ],
    "TYPING": [
        "Любит «слепую печать», старается добиться высокого результата\n",
        "Печатает потому, что надо. Но при этом виден прогресс.\n",
        "Не любит печать и всячески противится этому, что сказывается на модулях, в которых необходимо вводить текст с клавиатуры\n",
        "Другое\n"
    ],
    "BEHAVIOR": [
        "Поведение хорошее\n",
        "Поведение на троечку, но при этом успеваемость высокая\n",
        "Любит пошалить и поотвлекать других\n",
        "Другое\n"
    ],
    "RECOMMENDATIONS": [
     "Укрепление конкретных навыков\n",
     "Участие в проектах/соревнованиях\n",
     "Совершенствование межличностных навыков\n"

    ]
}



@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        # Получаем данные из формы
        data = {
            "NAME": request.form.get("NAME", "Без имени"),
            "ACTIVITY": request.form.getlist("ACTIVITY"),
            "ENGAGEMENT": request.form.getlist("ENGAGEMENT"),
            "GOALS": request.form.getlist("GOALS"),
            "HELP": request.form.getlist("HELP"),
            "COMMUNICATION": request.form.getlist("COMMUNICATION"),
            "BREAKS": request.form.getlist("BREAKS"),
            "CREATIVITY": request.form.getlist("CREATIVITY"),
            "TYPING": request.form.getlist("TYPING"),
            "BEHAVIOR": request.form.getlist("BEHAVIOR"),
            "RECOMMENDATIONS": request.form.getlist("RECOMMENDATIONS")
        }

        # Обрабатываем "Другое" для каждого раздела
        for key in OPTIONS.keys():
            custom_option = request.form.get(f"{key}_custom", "").strip()
            if custom_option and "Другое\n" in data[key]:
                # Заменяем "Другое" на пользовательский текст
                data[key] = [custom_option + "\n" if item == "Другое\n" else item for item in data[key]]
            elif "Другое\n" in data[key] and not custom_option:
                # Удаляем "Другое", если пользователь ничего не ввел
                data[key] = [item for item in data[key] if item != "Другое\n"]

        # Создаем документ
        template_path = "template.docx"
        output_folder = "output_docs"
        if not os.path.exists(output_folder):
            os.makedirs(output_folder)
        output_path = os.path.join(output_folder,
                                   f"Характеристика_{data['NAME']}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.docx")

        doc = DocxTemplate(template_path)
        doc.render(data)
        doc.save(output_path)

        # Отправляем файл пользователю
        return send_file(output_path, as_attachment=True)

    # Отображаем форму
    return render_template('index.html', options=OPTIONS)


if __name__ == "__main__":
    app.run(debug=True)